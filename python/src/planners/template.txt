'{{#message role="system"}}## Instructions\nExplain how to achieve the user\'s goal with the available helpers with a Handlebars template.\n\n## Example\nIf the user wanted you to generate 10 random numbers and use them in another helper, you could answer with the following.{{/message}}\n\n{{#message role="user"}}Please show me how to write a Handlebars template that achieves the following goal.\n\n##Goal\nI want you to generate 10 random numbers and send them to another helper.{{/message}}\n\n{{#message role="assistant"}}Here\'s the Handlebars template that achieves the goal:\n\n```handlebars\n{{!-- Step 1: initialize the count --}}\\{{set\n  "count"\n  10\n}}\nThe count variable: \\{{json\n  (get\n    "count"\n  )\n}}\n\n{{!-- Step 2: loop using the count --}}\\{{#each\n  (range\n    1\n    (get\n      "count"\n    )\n  )\n}}\n  \\{{set\n    "index"\n    this\n  }}\n{{!-- Step 3: create random number --}}  \\{{set\n    "randomNumber"\n    (example.random\n      seed=index\n    )\n  }}\n  The random number: \\{{json \n    (get\n      "randomNumber"\n    )\n  }}\n{{!-- Step 4: call example helper with random number --}}  The example helper result: \\{{json\n    (example.helper\n      input=(get\n        "randomNumber"\n      )\n    )\n  }}\n\\{{/each}}\n```{{/message}}\n\n{{#message role="system"}}Now let\'s try the real thing.{{/message}}\n\n{{#message role="user"}}Please show me how to write a Handlebars template that achieves the following goal with the available helpers.\n\n##Goal\n{{goal}}\n\n## Out-of-the-box helpers\nThe following helpers are available to you:\n- {{{{raw}}}}`{{#if}}{{/if}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{#unless}}{{/unless}}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{#each}}{{/each}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{#with}}{{/with}}`{{{{/raw}}}}\n\n## Loop helpers\nIf you need to loop through a list of values with `\\{{#each}}`, you can use the following helpers:\n- {{{{raw}}}}`{{range}}`{{{{/raw}}}} – Generates a range of numbers from the given start to the given end.\n- {{{{raw}}}}`{{array}}`{{{{/raw}}}} – Generates an array of values from the given values.\n\n## Comparison helpers\nIf you need to compare two values, you can use the following helpers:\n- {{{{raw}}}}`{{equal}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{lessThan}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{greaterThan}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{lessThanOrEqual}}`{{{{/raw}}}}\n- {{{{raw}}}}`{{greaterThanOrEqual}}`{{{{/raw}}}}\n\nTo use the comparison helpers, you must pass in two positional values. For example, to check if the variable `var` is equal to the number `1`, you would use the following helper like so: `\\{{#if (equal var 1)}}\\{{/if}}`.\n\n## Variable helpers\nIf you need to create or retrieve a variable, you can use the following helpers:\n- {{{{raw}}}}`{{set}}`{{{{/raw}}}} – Creates a variable with the given name and value. It does not print anything to the template, so you must use `\\{{json}}` to print the value.\n- {{{{raw}}}}`{{get}}`{{{{/raw}}}} – Retrieves the value of a variable with the given name.\n- {{{{raw}}}}`{{json}}`{{{{/raw}}}} – Generates a JSON string from the given value; no need to use on strings.\n\n## Custom helpers\nLastly, you also have the following Handlebars helpers that you can use to accomplish my goal.{{#each functions}}\n\n### `{{doubleOpen}}{{toCamelCase PluginName}}.{{toCamelCase Name}}{{doubleClose}}`\nDescription: {{Description}}\nInputs:\n{{#each Parameters}}  - {{Name}}: {{Type.Name}} - {{Description}} {{#if IsRequired}}(required){{else}}(optional){{/if}}\n{{/each}}Output: string - The result of the helper.{{/each}}{{/message}}\n\n{{#message role="system"}}## Tips and tricks\n- Add a comment above each step to describe what the step does\n- Use the `\\{{set}}` and `\\{{get}}` helpers to save and retrieve the results of another helper so you can use it later in the template without wasting resources.\n- There are no initial variables available to you. You must create them yourself using the `\\{{set}}` helper and then use them with `\\{{get}}`\n- Be extremely careful about types. For example, if you pass an array to a helper that expects a number, the template will error out.\n- Loops can be tricky, so only use them if they\'re absolutely necessary.\n- There is no need to check your results in the template.\n- Do not nest sub-expressions because it will cause the template to error out.\n\n## Start\nNow take a deep breath and accomplish the task:\n1. The first steps should always be to initialize any variables you need\n2. During each step (including the first one), the template should use the \\{{json}} helper to output the result of the step\n3. Don\'t forget to use the tips and tricks otherwise the template will not work\n4. Don\'t close the ``` handlebars block until you\'re done with all the steps{{/message}}'